#!/bin/bash

account=$(aws sts get-caller-identity | grep Account | awk -F '"' '{print $4}')
aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $account.dkr.ecr.us-east-1.amazonaws.com

options=(
  "Create new ECR repository"
  "Push to existing ECR repository"
)

select opt in "${options[@]}"; do 
  case $opt in
    "Create new ECR repository")
      read -p "Repository name: " name
      aws ecr create-repository --repository-name $name --region us-east-1 --image-scanning-configuration scanOnPush=true --image-tag-mutability MUTABLE > /dev/null
      break
      ;;
    "Push to existing ECR repository")
      repositories=()
      while IFS= read -r line; do
          repositories+=( "$line" )
      done < <( aws ecr describe-repositories | grep repositoryName | awk -F '"' '{print $4}' )

      select r in "${repositories[@]}"; do
        if [[ -n "$r" ]]; then
          name="$r"
          break
        fi
      done
      break
      ;;
  esac
done

uri=$(aws ecr describe-repositories --repository-name $name | grep repositoryUri | awk -F '"' '{print $4}')

docker buildx build --platform linux/amd64 --provenance=false -t ics-proxy-lambda:latest .
docker tag ics-proxy-lambda:latest $uri:latest
docker push $uri:latest
aws lambda update-function-code --function-name ics-proxy --image-uri $uri:latest


